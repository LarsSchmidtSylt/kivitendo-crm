{
  "name": "npm-autoinit",
  "version": "0.2.0",
  "description": "Silence \"ENOENT package.json\" warnings for npm",
  "author": {
    "name": "Eugene Sharygin",
    "email": "eush77@gmail.com"
  },
  "license": "MIT",
  "preferGlobal": true,
  "scripts": {
    "test": "tape test/*.js"
  },
  "files": [
    "autoinit.js",
    "index.js",
    "init.js"
  ],
  "homepage": "https://github.com/eush77/npm-autoinit",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/eush77/npm-autoinit.git"
  },
  "bugs": {
    "url": "https://github.com/eush77/npm-autoinit/issues"
  },
  "keywords": [
    "auto",
    "boilerplate",
    "enoent",
    "epackagejson",
    "errors",
    "generate",
    "init",
    "npm",
    "package.json",
    "quiet",
    "scaffold",
    "silence",
    "stub",
    "warnings"
  ],
  "dependencies": {
    "find-root": "^0.1.1",
    "init-package-json": "^1.7.1"
  },
  "devDependencies": {
    "falafel": "^1.2.0",
    "rewire": "^2.3.4",
    "tape": "^4.0.3"
  },
  "readme": "[![npm](https://nodei.co/npm/npm-autoinit.png)](https://npmjs.com/package/npm-autoinit)\n\n# npm-autoinit\n\n[![Build Status][travis-badge]][travis] [![Dependency Status][david-badge]][david]\n\nIf you miss `package.json` in the directory `npm` is working in, it will complain.\n\n```\n$ npm install thingy\n…\nnpm WARN ENOENT ENOENT: no such file or directory, open '/tmp/tmpdir/R3semq/package.json'\nnpm WARN EPACKAGEJSON /tmp/tmpdir/R3semq No description\nnpm WARN EPACKAGEJSON /tmp/tmpdir/R3semq No repository field.\nnpm WARN EPACKAGEJSON /tmp/tmpdir/R3semq No README data\nnpm WARN EPACKAGEJSON /tmp/tmpdir/R3semq No license field.\n```\n\nOr even:\n\n```\n$ npm ls\n…\nnpm ERR! error in /tmp/tmpdir/R3semq: ENOENT: no such file or directory, open '/tmp/tmpdir/R3semq/package.json'\n```\n\nI often [use temporary directories][tmpdir] to play/experiment with packages and hustling with `package.json` every time I want to check out some package is not an option for me.\n\nThis module will make npm run `npm init --yes` automatically for you if it sees fit.\n\nSee https://github.com/npm/npm/issues/9161.\n\n[tmpdir]: https://github.com/eush77/fish-tmpdir\n\n[travis]: https://travis-ci.org/eush77/npm-autoinit\n[travis-badge]: https://travis-ci.org/eush77/npm-autoinit.svg\n[david]: https://david-dm.org/eush77/npm-autoinit\n[david-badge]: https://david-dm.org/eush77/npm-autoinit.png\n\n## How\n\nThis package takes advantage of `onload-script` npm config option.\n\n> A node module to require() when npm loads.  Useful for programmatic usage.\n\n`onload-script` executes before any work on npm command is done, so if we create `package.json` file here (and [block] while we do it) the problem is solved.\n\n[block]: https://github.com/eush77/npm-autoinit/blob/ba74d4434fba8b1ffa093669de24bb7defb88f6c/autoinit.js#L6\n\n## Install\n\n```\n$ npm install -g npm-autoinit\n```\n\nAfter that, add `npm-autoinit/autoinit` as npm onload script:\n\n```\n$ npm config set onload-script npm-autoinit/autoinit\n```\n\n## API\n\n#### `autoinit(dir, cb(err))`\n\nCheck if `package.json` is present, and if it's not run `npm init -y`.\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "npm-autoinit@0.2.0",
  "_from": "npm-autoinit@"
}
